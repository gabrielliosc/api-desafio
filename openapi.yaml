openapi: 3.0.3
info:
  title: API Desafio 30 dias
  description: >-
    Api desenvolvida para ser utilizada pelo desafio de 30 dias de frontend da
    comunidade de Mulheres e tecnologia


    Links úteis:

    - [Repositório do
    desafio](https://github.com/Mulheres-e-Tecnologia-M-T/30-dias-programando)

    - [Respositório da api](https://github.com/gabrielliosc/api-desafio)

    - [Link para a comunidade](https://linktr.ee/mulheresetecnologia)
  termsOfService: http://swagger.io/terms/
  contact:
    email: gabrielli.osc@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://desafio-30-dias-api.onrender.com/
tags:
  - name: Users
    description: Criação e consulta aos usuários
paths:
  /users:
    post:
      tags:
        - Users
      summary: Criar um novo usuário
      description: Cria um novo usuário com email e senha
      operationId: createUser
      requestBody:
        description: Criar um novo usuário
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
          application/xml:
            schema:
              $ref: '#/components/schemas/Users'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Users'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
            application/xml:
              schema:
                $ref: '#/components/schemas/Users'
    get:
      tags:
        - Users
      summary: Pesquisa o usuário pelo email e senha
      operationId: findPetsByStatus
      parameters:
        - name: email
          in: query
          description: Email do usuário
          required: true
          explode: true
          schema:
            type: string
            default: email@gmail.com
        - name: senha
          in: query
          description: Senha do usuário
          required: true
          explode: true
          schema:
            type: string
            default: 123
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersView'
components:
  schemas:
    Users:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nome:
          type: string
          format: string
          example: Marcia
        email:
          type: string
          format: string
          example: marcia@gmail.com
        senha:
          type: string
          format: string
          example: 456
    UsersView:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          format: string
          example: Marcia
        email:
          type: string
          format: string
          example: marcia@gmail.com
        password:
          type: string
          format: string
          example: $2a$08$zHOyqPCQ7BJ93v7Wi7fske/RvVdlTdYgrTaGSPOEHBy5Jypc7cjuW
        created_at:
          type: string
          format: date-time
          example: 2024-02-23T15:04:36.000Z
